!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("utils",[],t):"object"==typeof exports?exports.utils=t():e.utils=t()}(this,(()=>(()=>{"use strict";var e={23:e=>{e.exports=require("util")},30:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Environment=void 0;const a=o(547),n=o(741),r=o(885);class s extends n.ObjectAccumulator{static{this.factory=()=>new s}constructor(){super()}fromEnv(e){let t;return(0,r.isBrowser)()?t=globalThis.ENV:(t=globalThis.process.env,e=(0,a.toENVFormat)(e)),t[e]}expand(e){Object.entries(e).forEach((([e,t])=>{Object.defineProperty(this,e,{get:()=>{const o=this.fromEnv(e);return void 0===o?t:o},set:e=>{t=e},configurable:!0,enumerable:!0})}))}static instance(...e){return s._instance=s._instance?s._instance:s.factory(...e),s._instance}static accumulate(e){return s.instance().accumulate(e)}static keys(e=!0){return s.instance().keys().map((t=>e?(0,a.toENVFormat)(t):t))}}t.Environment=s},154:(e,t)=>{var o,a,n;Object.defineProperty(t,"__esModule",{value:!0}),t.AbortCode=t.DefaultLoggingConfig=t.DefaultTheme=t.NumericLogLevels=t.LogLevel=t.Tokens=t.SetupScriptKey=t.NoCIFLag=t.SemVersion=t.SemVersionRegex=t.Encoding=void 0,t.Encoding="utf-8",t.SemVersionRegex=/^(\d+)\.(\d+)\.(\d+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z])))/g,function(e){e.PATCH="patch",e.MINOR="minor",e.MAJOR="major"}(o||(t.SemVersion=o={})),t.NoCIFLag="-no-ci",t.SetupScriptKey="postinstall",function(e){e.GIT=".token",e.NPM=".npmtoken",e.DOCKER=".dockertoken",e.CONFLUENCE=".confluence-token"}(a||(t.Tokens=a={})),function(e){e.error="error",e.info="info",e.verbose="verbose",e.debug="debug",e.silly="silly"}(n||(t.LogLevel=n={})),t.NumericLogLevels={error:2,info:4,verbose:6,debug:7,silly:9},t.DefaultTheme={class:{fg:34},id:{fg:36},stack:{},timestamp:{},message:{error:{fg:31}},method:{},logLevel:{error:{fg:31,style:["bold"]},info:{},verbose:{},debug:{fg:33}}},t.DefaultLoggingConfig={verbose:0,level:n.info,logLevel:!0,style:!1,separator:" - ",timestamp:!0,timestampFormat:"HH:mm:ss.SSS",context:!0,theme:t.DefaultTheme},t.AbortCode="Aborted"},191:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ReleaseScript=void 0;const a=o(686),n=o(154),r=o(714),s=o(529),i={ci:{type:"boolean",default:!0},message:{type:"string",short:"m"},tag:{type:"string",short:"t",default:void 0}};class l extends s.Command{constructor(){super("ReleaseScript",i)}async prepareVersion(e){const t=this.log.for(this.prepareVersion);return(e=this.testVersion(e||""))||(t.verbose("No release message provided. Prompting for one:"),t.info("Listing latest git tags:"),await(0,a.runCommand)("git tag --sort=-taggerdate | head -n 5").promise,await r.UserInput.insistForText("tag","Enter the new tag number (accepts v*.*.*[-...])",(e=>!!e.toString().match(/^v[0-9]+\.[0-9]+.[0-9]+(-[0-9a-zA-Z-]+)?$/))))}testVersion(e){const t=this.log.for(this.testVersion);switch(e=e.trim().toLowerCase()){case n.SemVersion.PATCH:case n.SemVersion.MINOR:case n.SemVersion.MAJOR:return t.verbose(`Using provided SemVer update: ${e}`,1),e;default:return t.verbose(`Testing provided version for SemVer compatibility: ${e}`,1),new RegExp(n.SemVersionRegex).test(e)?(t.verbose(`version approved: ${e}`,1),e):void t.debug(`Invalid version number: ${e}`)}}async prepareMessage(e){const t=this.log.for(this.prepareMessage);return e||(t.verbose("No release message provided. Prompting for one"),await r.UserInput.insistForText("message","What should be the release message/ticket?",(e=>!!e&&e.toString().length>5)))}async run(e){let t;const{ci:o}=e;let{tag:s,message:i}=e;s=await this.prepareVersion(s),i=await this.prepareMessage(i),t=await(0,a.runCommand)(`npm run prepare-release -- ${s} ${i}`,{cwd:process.cwd()}).promise,t=await(0,a.runCommand)("git status --porcelain").promise,await t,t.logs.length&&await r.UserInput.askConfirmation("git-changes","Do you want to push the changes to the remote repository?",!0)&&(await(0,a.runCommand)("git add .").promise,await(0,a.runCommand)(`git commit -m "${s} - ${i} - after release preparation${o?"":n.NoCIFLag}"`).promise),await(0,a.runCommand)(`npm version "${s}" -m "${i}${o?"":n.NoCIFLag}"`).promise,await(0,a.runCommand)("git push --follow-tags").promise,o||await(0,a.runCommand)("NPM_TOKEN=$(cat .npmtoken) npm publish --access public").promise}}t.ReleaseScript=l},317:e=>{e.exports=require("child_process")},340:function(e,t,o){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.patchFile=function e(t,o){const a=c.for(e);if(!n.default.existsSync(t))throw new Error(`File not found at path "${t}".`);let r=g(t);try{a.verbose(`Patching file "${t}"...`),a.debug(`with value: ${JSON.stringify(o)}`),r=(0,i.patchString)(r,o)}catch(e){throw new Error(`Error patching file: ${e}`)}f(t,r)},t.readFile=g,t.writeFile=f,t.getPackage=u,t.setPackageAttribute=function(e,t,o=process.cwd()){const a=u(o);a[e]=t,f(r.default.join(o,"package.json"),JSON.stringify(a,null,2))},t.getPackageVersion=function(e=process.cwd()){return u(e,"version")},t.getDependencies=d,t.updateDependencies=async function e(){const t=c.for(e);t.info("checking for updates..."),await(0,l.runCommand)("npx npm-check-updates -u").promise,t.info("updating..."),await(0,l.runCommand)("npx npm run do-install").promise},t.installIfNotAvailable=async function(e,t){if(!t){const e=await d();t={prod:e.prod?.map((e=>e.name))||[],dev:e.dev?.map((e=>e.name))||[],peer:e.peer?.map((e=>e.name))||[]}}const{prod:o,dev:a,peer:n}=t,r=Array.from(new Set([...o||[],...a||[],...n||[]])),s=(e="string"==typeof e?[e]:e).filter((e=>!r.includes(e)));return s.length&&await h({dev:s}),t.dev=t.dev||[],t.dev.push(...s),t},t.pushToGit=async function e(){const t=c.for(e),o=await(0,l.runCommand)("git config user.name").promise,a=await(0,l.runCommand)("git config user.email").promise;t.verbose(`cached git id: ${o}/${a}. changing to automation`),await(0,l.runCommand)('git config user.email "automation@decaf.ts"').promise,await(0,l.runCommand)('git config user.name "decaf"').promise,t.info("Pushing changes to git..."),await(0,l.runCommand)("git add .").promise,await(0,l.runCommand)('git commit -m "refs #1 - after repo setup"').promise,await(0,l.runCommand)("git push").promise,await(0,l.runCommand)(`git config user.email "${a}"`).promise,await(0,l.runCommand)(`git config user.name "${o}"`).promise,t.verbose(`reverted to git id: ${o}/${a}`)},t.installDependencies=h,t.normalizeImport=async function(e){return e.then((e=>e.default||e))};const n=a(o(896)),r=a(o(928)),s=o(834),i=o(547),l=o(686),c=s.Logging.for("fs");function g(e){const t=c.for(g);try{return t.verbose(`Reading file "${e}"...`),n.default.readFileSync(e,"utf8")}catch(o){throw t.verbose(`Error reading file "${e}": ${o}`),new Error(`Error reading file "${e}": ${o}`)}}function f(e,t){const o=c.for(f);try{o.verbose(`Writing file "${e} with ${t.length} bytes...`),n.default.writeFileSync(e,t,"utf8")}catch(t){throw o.verbose(`Error writing file "${e}": ${t}`),new Error(`Error writing file "${e}": ${t}`)}}function u(e=process.cwd(),t){let o;try{o=JSON.parse(g(r.default.join(e,"package.json")))}catch(e){throw new Error(`Failed to retrieve package information" ${e}`)}if(t){if(!(t in o))throw new Error(`Property "${t}" not found in package.json`);return o[t]}return o}async function d(e=process.cwd()){let t;try{t=JSON.parse(await(0,l.runCommand)("npm ls --json",{cwd:e}).promise)}catch(e){throw new Error(`Failed to retrieve dependencies: ${e}`)}const o=(e,t)=>({name:e[0],version:e[1].version});return{prod:Object.entries(t.dependencies||{}).map(o),dev:Object.entries(t.devDependencies||{}).map(o),peer:Object.entries(t.peerDependencies||{}).map(o)}}async function h(e){const t=c.for(h),o=e.prod||[],a=e.dev||[],n=e.peer||[];o.length&&(t.info(`Installing dependencies ${o.join(", ")}...`),await(0,l.runCommand)(`npm install ${o.join(" ")}`,{cwd:process.cwd()}).promise),a.length&&(t.info(`Installing devDependencies ${a.join(", ")}...`),await(0,l.runCommand)(`npm install --save-dev ${a.join(" ")}`,{cwd:process.cwd()}).promise),n.length&&(t.info(`Installing peerDependencies ${n.join(", ")}...`),await(0,l.runCommand)(`npm install --save-peer ${n.join(" ")}`,{cwd:process.cwd()}).promise)}},443:e=>{e.exports=require("prompts")},483:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0})},487:function(e,t,o){var a=this&&this.__createBinding||(Object.create?function(e,t,o,a){void 0===a&&(a=o);var n=Object.getOwnPropertyDescriptor(t,o);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[o]}}),Object.defineProperty(e,a,n)}:function(e,t,o,a){void 0===a&&(a=o),e[a]=t[o]}),n=this&&this.__exportStar||function(e,t){for(var o in e)"default"===o||Object.prototype.hasOwnProperty.call(t,o)||a(t,e,o)};Object.defineProperty(t,"__esModule",{value:!0}),n(o(191),t),n(o(639),t)},499:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.StandardOutputWriter=void 0;const a=o(154),n=o(834),r=o(698);t.StandardOutputWriter=class{constructor(e,t,...o){this.cmd=e,this.lock=t,this.logger=n.Logging.for(this.cmd)}log(e,t){t=Buffer.isBuffer(t)?t.toString(a.Encoding):t;const o=`${"stderr"===e?(0,r.style)("ERROR").red.text:e}: ${t}`;this.logger.info(o)}data(e){this.log("stdout",String(e))}error(e){this.log("stderr",String(e))}errors(e){this.log("stderr",`Error executing command exited : ${e}`)}exit(e,t){this.log("stdout",`command exited code : ${0===e?(0,r.style)(e.toString()).green.text:(0,r.style)(null===e?"null":e.toString()).red.text}`),0===e?this.resolve(t.map((e=>e.trim())).join("\n")):this.reject(new Error(t.length?t.join("\n"):e.toString()))}parseCommand(e){return e="string"==typeof e?e.split(" "):e,this.cmd=e.join(" "),[e[0],e.slice(1)]}resolve(e){this.log("stdout",`${this.cmd} executed successfully: ${(0,r.style)(e?"ran to completion":e).green}`),this.lock.resolve(e)}reject(e){e instanceof Error||(e=new Error("number"==typeof e?`Exit code ${e}`:e)),this.log("stderr",`${this.cmd} failed to execute: ${(0,r.style)(e.message).red}`),this.lock.reject(e)}}},529:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Command=void 0;const a=o(834),n=o(154),r=o(714),s=o(837),i=o(340),l=o(866),c=o(30);class g{constructor(e,t={},o=[]){this.name=e,this.inputs=t,this.requirements=o,g.log||(Object.defineProperty(g,"log",{writable:!1,value:a.Logging.for(g.name)}),this.log=g.log),this.log=g.log.for(this.name),this.inputs=Object.assign({},s.DefaultCommandOptions,t)}async checkRequirements(){const{prod:e,dev:t,peer:o}=await(0,i.getDependencies)(),a=[],n=Array.from(new Set([...e,...t,...o]).values()).map((e=>e.name));for(const e of this.requirements)n.includes(e)||a.push(e);a.length}help(e){return this.log.info("This is help. I'm no use because I should have been overridden.")}async execute(){const e=r.UserInput.parseArgs(this.inputs),t=c.Environment.accumulate(n.DefaultLoggingConfig).accumulate(s.DefaultCommandValues).accumulate(e.values),{timestamp:o,verbose:a,version:g,help:f,logLevel:u,logStyle:d,banner:h}=t;if(this.log.setConfig({...t,timestamp:!!o,level:u,style:!!d,verbose:a||0}),g)return(0,i.getPackageVersion)();if(f)return this.help(e);let m;h&&(0,l.printBanner)(this.log.for(l.printBanner,{timestamp:!1,style:!1,context:!1,logLevel:!1}));try{m=await this.run(t)}catch(e){throw this.log.error(`Error while running provided cli function: ${e}`),e}return m}}t.Command=g},547:(e,t)=>{function o(e){return e.replace(/([a-z])([A-Z])/g,"$1_$2").replace(/[\s-]+/g,"_").toLowerCase()}function a(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}Object.defineProperty(t,"__esModule",{value:!0}),t.padEnd=function(e,t,o=" "){if(1!==o.length)throw new Error("Invalid character length for padding. must be one!");return e.padEnd(t,o)},t.patchPlaceholders=function(e,t){return e.replace(/\$\{([a-zA-Z0-9_]+)\}/g,((e,o)=>t[o]||e))},t.patchString=function(e,t,o="g"){return Object.entries(t).forEach((([t,n])=>{const r=new RegExp(a(t),o);e=e.replace(r,n)})),e},t.toCamelCase=function(e){return e.replace(/(?:^\w|[A-Z]|\b\w)/g,((e,t)=>0===t?e.toLowerCase():e.toUpperCase())).replace(/\s+/g,"")},t.toENVFormat=function(e){return o(e).toUpperCase()},t.toSnakeCase=o,t.toKebabCase=function(e){return e.replace(/([a-z])([A-Z])/g,"$1-$2").replace(/[\s_]+/g,"-").toLowerCase()},t.toPascalCase=function(e){return e.replace(/(?:^\w|[A-Z]|\b\w)/g,(e=>e.toUpperCase())).replace(/\s+/g,"")},t.escapeRegExp=a},639:function(e,t,o){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.TemplateSync=void 0;const n=a(o(928)),r=o(529),s=o(935),i=o(946),l=a(o(896)),c="https://raw.githubusercontent.com/decaf-ts/ts-workspace/master",g={templates:[".github/ISSUE_TEMPLATE/bug_report.md",".github/ISSUE_TEMPLATE/feature_request.md",".github/FUNDING.yml"],workflows:[".github/workflows/codeql-analysis.yml",".github/workflows/jest-coverage.yaml",".github/workflows/nodejs-build-prod.yaml",".github/workflows/pages.yaml",".github/workflows/publish-on-release.yaml",".github/workflows/release-on-tag.yaml",".github/workflows/snyk-analysis.yaml"],ide:[".idea/runConfigurations/All Tests.run.xml",".idea/runConfigurations/build.run.xml",".idea/runConfigurations/build_prod.run.xml",".idea/runConfigurations/coverage.run.xml",".idea/runConfigurations/docs.run.xml",".idea/runConfigurations/drawings.run.xml",".idea/runConfigurations/flash-forward.run.xml",".idea/runConfigurations/Integration_Tests.run.xml",".idea/runConfigurations/Bundling_Tests.run.xml",".idea/runConfigurations/lint-fix.run.xml",".idea/runConfigurations/release.run.xml",".idea/runConfigurations/test_circular.run.xml",".idea/runConfigurations/uml.run.xml",".idea/runConfigurations/Unit Tests.run.xml",".idea/runConfigurations/update-scripts.run.xml"],docs:["workdocs/tutorials/Contributing.md","workdocs/tutorials/Documentation.md","workdocs/tutorials/For Developers.md","workdocs/2-Badges.md","workdocs/jsdocs.json","workdocs/readme-md.json"],styles:[".prettierrc","eslint.config.js"],scripts:["bin/update-scripts.cjs","bin/tag-release.cjs"],tests:["jest.config.ts","workdocs/reports/jest.coverage.config.ts"],typescript:["tsconfig.json"],docker:["Dockerfile"],automation:["workdocs/confluence/Continuous Integration-Deployment/GitHub.md","workdocs/confluence/Continuous Integration-Deployment/Jira.md","workdocs/confluence/Continuous Integration-Deployment/Teams.md"]},f={boot:{type:"boolean"},org:{type:"string",short:"o"},name:{type:"string",short:"n",default:void 0},author:{type:"string",short:"a",default:void 0},all:{type:"boolean"},license:{type:"string",message:"Pick the license"},scripts:{type:"boolean"},styles:{type:"boolean"},docs:{type:"boolean"},ide:{type:"boolean"},workflows:{type:"boolean"},templates:{type:"boolean"},typescript:{type:"boolean"},docker:{type:"boolean"},pkg:{type:"boolean"},dependencies:{type:"boolean"},tests:{type:"boolean"},automation:{type:"boolean"}};class u extends r.Command{constructor(){super("TemplateSync",f),this.replacements={},this.getStyles=()=>this.downloadOption("styles"),this.getTemplates=()=>this.downloadOption("templates"),this.getWorkflows=()=>this.downloadOption("workflows"),this.getDocs=()=>this.downloadOption("docs"),this.getTypescript=()=>this.downloadOption("typescript"),this.getAutomation=()=>this.downloadOption("automation"),this.getTests=()=>this.downloadOption("tests"),this.getDocker=()=>this.downloadOption("docker")}loadValuesFromPackage(){const e=process.cwd(),t=(0,s.getPackage)(e,"author");let o,a=(0,s.getPackage)(e,"name");if(a.startsWith("@")){const e=a.split("/");a=e[1],o=e[0].replace("@","")}["Tiago Venceslau","TiagoVenceslau","${author}"].forEach((e=>this.replacements[e]=t)),["TS-Workspace","ts-workspace","${name}"].forEach((e=>this.replacements[e]=a)),["decaf-ts","${org}"].forEach((e=>this.replacements[e]=o||'""')),this.replacements["${org_or_owner}"]=o||a}async downloadOption(e){if(!(e in g))throw new Error(`Option "${e}" not found in options`);const t=g[e];for(const e of t){this.log.info(`Downloading ${e}`);let t=await s.HttpClient.downloadFile(`${c}/${e}`);t=(0,s.patchString)(t,this.replacements),(0,s.writeFile)(n.default.join(process.cwd(),e),t)}}async getLicense(e){this.log.info(`Downloading ${e} license`);const t=`${c}/workdocs/licenses/${e}.md`;let o=await s.HttpClient.downloadFile(t);o=(0,s.patchString)(o,this.replacements),(0,s.writeFile)(n.default.join(process.cwd(),"LICENSE.md"),o),(0,s.setPackageAttribute)("license",e)}async getIde(){l.default.mkdirSync(n.default.join(process.cwd(),".idea","runConfigurations"),{recursive:!0}),await this.downloadOption("ide")}async getScripts(){await this.downloadOption("scripts"),this.log.info("please re-run the command"),process.exit(0)}async initPackage(e,t,o){try{const a=(0,s.getPackage)();delete a[s.SetupScriptKey],a.name=e,a.version="0.0.1",a.author=t,a.license=o,l.default.writeFileSync("package.json",JSON.stringify(a,null,2))}catch(e){throw new Error(`Error fixing package.json: ${e}`)}}async updatePackageScrips(){try{const e=JSON.parse(await s.HttpClient.downloadFile(`${c}/package.json`)),{scripts:t}=e,o=(0,s.getPackage)();Object.keys(o.scripts).forEach((e=>{if(e in t){const a=(0,s.patchString)(t[e],this.replacements);a!==t[e]&&(o.scripts[e]=a)}})),o.exports.require=e.exports.require,o.exports.import=e.exports.import,o.types=e.types,l.default.writeFileSync("package.json",JSON.stringify(o,null,2))}catch(e){throw new Error(`Error fixing package.json scripts: ${e}`)}}async createTokenFiles(){const e=this.log.for(this.createTokenFiles),t=await i.UserInput.insistForText("token","please input your github token",(e=>!!e.match(/^ghp_[0-9a-zA-Z]{36}$/g)));Object.values(s.Tokens).forEach((o=>{try{let a;try{a=l.default.existsSync(o)}catch(a){return e.info(`Token file ${o} not found. Creating a new one...`),void l.default.writeFileSync(o,".token"===o?t:"")}a||l.default.writeFileSync(o,".token"===o?t:"")}catch(e){throw new Error(`Error creating token file ${o}: ${e}`)}}))}async getOrg(){const e=await i.UserInput.askText("Organization","Enter the organization name (will be used to scope your npm project. leave blank to create a unscoped project):");return await i.UserInput.askConfirmation("Confirm organization","Is this organization correct?",!0)?e:this.getOrg()}async auditFix(){return await(0,s.runCommand)("npm audit fix --force").promise}patchFiles(){const e=[...l.default.readdirSync(n.default.join(process.cwd(),"src"),{recursive:!0,withFileTypes:!0}).filter((e=>e.isFile())).map((e=>n.default.join(e.parentPath,e.name))),...l.default.readdirSync(n.default.join(process.cwd(),"workdocs"),{recursive:!0,withFileTypes:!0}).filter((e=>e.isFile()&&e.name.endsWith(".md"))).map((e=>n.default.join(e.parentPath,e.name))),n.default.join(process.cwd(),".gitlab-ci.yml"),n.default.join(process.cwd(),"workdocs","jsdocs.json")];for(const t of e)(0,s.patchFile)(t,this.replacements)}async updateDependencies(){try{const e=JSON.parse(await s.HttpClient.downloadFile(`${c}/package.json`)),{devDependencies:t}=e,o=(0,s.getPackage)();Object.keys(o.scripts).forEach((e=>{if(e in t){const a=t[e];a!==t[e]&&(o.devDependencies=o.devDependencies||{},o.devDependencies[e]=a)}})),l.default.writeFileSync("package.json",JSON.stringify(o,null,2)),await(0,s.runCommand)("npm install").promise}catch(e){throw new Error(`Error fixing package.json dependencies: ${e}`)}}async run(e){let{license:t}=e;const{boot:o}=e;let{all:a,scripts:n,styles:r,docs:s,ide:l,workflows:c,templates:g,docker:f,typescript:u,dependencies:d,tests:h,automation:m,pkg:p}=e;if((n||r||s||l||c||g||f||u||m||d||h||p)&&(a=!1),o){const e=await this.getOrg(),o=await i.UserInput.insistForText("Project name","Enter the project name:",(e=>e.length>1)),a=await i.UserInput.insistForText("Author","Enter the author name:",(e=>e.length>1)),n=e?`@${e}/${o}`:o;await this.initPackage(n,a,t),await this.createTokenFiles(),await this.auditFix(),this.patchFiles()}a&&(n=!1,r=!0,s=!0,l=!0,c=!0,g=!0,f=!0,u=!0,p=!0,d=!0,h=!0,m=!1),void 0===n&&(n=await i.UserInput.askConfirmation("scripts","Do you want to get scripts?",!0)),n&&await this.getScripts(),this.loadValuesFromPackage(),a||void 0!==t||await i.UserInput.askConfirmation("license","Do you want to set a license?",!0)&&(t=await i.UserInput.insistForText("license","Enter the desired License (MIT|GPL|Apache|LGPL|AGPL):",(e=>!!e&&!!e.match(/^(MIT|GPL|Apache|LGPL|AGPL)$/g)))),void 0!==t&&await this.getLicense(t),void 0===l&&(l=await i.UserInput.askConfirmation("ide","Do you want to get ide configs?",!0)),l&&await this.getIde(),void 0===u&&(u=await i.UserInput.askConfirmation("typescript","Do you want to get typescript configs?",!0)),u&&await this.getTypescript(),void 0===f&&(f=await i.UserInput.askConfirmation("docker","Do you want to get docker configs?",!0)),f&&await this.getDocker(),void 0===m&&(m=await i.UserInput.askConfirmation("automation","Do you want to get automation configs?",!0)),m&&await this.getAutomation(),void 0===r&&(r=await i.UserInput.askConfirmation("styles","Do you want to get styles?",!0)),r&&await this.getStyles(),void 0===s&&(s=await i.UserInput.askConfirmation("docs","Do you want to get docs?",!0)),s&&await this.getDocs(),void 0===c&&(c=await i.UserInput.askConfirmation("workflows","Do you want to get workflows?",!0)),c&&await this.getWorkflows(),void 0===g&&(g=await i.UserInput.askConfirmation("templates","Do you want to get templates?",!0)),g&&await this.getTemplates(),void 0===p&&(p=await i.UserInput.askConfirmation("pkg","Do you want to update your package.json scripts?",!0)),p&&await this.updatePackageScrips(),void 0===h&&(h=await i.UserInput.askConfirmation("pkg","Do you want to update your test configs?",!0)),h&&await this.getTests(),void 0===d&&(d=await i.UserInput.askConfirmation("pkg","Do you want to update dev dependencies?",!0)),d&&await this.updateDependencies()}}t.TemplateSync=u},680:e=>{e.exports=JSON.parse('[{"Slogan":"No caffeine, no chaos. Just clean code.","Tags":"Coffee-themed, Calm, Tech"},{"Slogan":"Full flavor, no jitters. That\'s Decaf-TS.","Tags":"Coffee-themed, Cheerful"},{"Slogan":"Chill fullstack. Powered by Decaf.","Tags":"Coffee-themed, Fun, Tech"},{"Slogan":"Decaf-TS: Brewed for calm code.","Tags":"Coffee-themed, Branding"},{"Slogan":"Smooth as your morning Decaf.","Tags":"Coffee-themed, Chill"},{"Slogan":"All the kick, none of the crash.","Tags":"Coffee-themed, Energetic"},{"Slogan":"Sip back and ship faster.","Tags":"Coffee-themed, Fun"},{"Slogan":"Keep calm and code Decaf.","Tags":"Coffee-themed, Playful"},{"Slogan":"Code without the caffeine shakes.","Tags":"Coffee-themed, Humorous"},{"Slogan":"Your fullstack, decaffeinated.","Tags":"Coffee-themed, Technical"},{"Slogan":"No caffeine, no chaos. Just clean code.","Tags":"Coffee-themed, Calm, Tech"},{"Slogan":"Full flavor, no jitters. That’s Decaf-TS.","Tags":"Coffee-themed, Cheerful"},{"Slogan":"Chill fullstack. Powered by Decaf.","Tags":"Coffee-themed, Fun, Tech"},{"Slogan":"Decaf-TS: Brewed for calm code.","Tags":"Coffee-themed, Branding"},{"Slogan":"Smooth as your morning Decaf.","Tags":"Coffee-themed, Chill"},{"Slogan":"All the kick, none of the crash.","Tags":"Coffee-themed, Energetic"},{"Slogan":"Sip back and ship faster.","Tags":"Coffee-themed, Fun"},{"Slogan":"Keep calm and code Decaf.","Tags":"Coffee-themed, Playful"},{"Slogan":"Code without the caffeine shakes.","Tags":"Coffee-themed, Humorous"},{"Slogan":"Your fullstack, decaffeinated.","Tags":"Coffee-themed, Technical"},{"Slogan":"No caffeine, no chaos. Just clean code.","Tags":"Coffee-themed, Calm, Tech"},{"Slogan":"Full flavor, no jitters. That’s Decaf-TS.","Tags":"Coffee-themed, Cheerful"},{"Slogan":"Chill fullstack. Powered by Decaf.","Tags":"Coffee-themed, Fun, Tech"},{"Slogan":"Decaf-TS: Brewed for calm code.","Tags":"Coffee-themed, Branding"},{"Slogan":"Smooth as your morning Decaf.","Tags":"Coffee-themed, Chill"},{"Slogan":"All the kick, none of the crash.","Tags":"Coffee-themed, Energetic"},{"Slogan":"Sip back and ship faster.","Tags":"Coffee-themed, Fun"},{"Slogan":"Keep calm and code Decaf.","Tags":"Coffee-themed, Playful"},{"Slogan":"Code without the caffeine shakes.","Tags":"Coffee-themed, Humorous"},{"Slogan":"Your fullstack, decaffeinated.","Tags":"Coffee-themed, Technical"},{"Slogan":"No caffeine, no chaos. Just clean code.","Tags":"Coffee-themed, Calm, Tech"},{"Slogan":"Full flavor, no jitters. That’s Decaf-TS.","Tags":"Coffee-themed, Cheerful"},{"Slogan":"Chill fullstack. Powered by Decaf.","Tags":"Coffee-themed, Fun, Tech"},{"Slogan":"Decaf-TS: Brewed for calm code.","Tags":"Coffee-themed, Branding"},{"Slogan":"Smooth as your morning Decaf.","Tags":"Coffee-themed, Chill"},{"Slogan":"All the kick, none of the crash.","Tags":"Coffee-themed, Energetic"},{"Slogan":"Sip back and ship faster.","Tags":"Coffee-themed, Fun"},{"Slogan":"Keep calm and code Decaf.","Tags":"Coffee-themed, Playful"},{"Slogan":"Code without the caffeine shakes.","Tags":"Coffee-themed, Humorous"},{"Slogan":"Your fullstack, decaffeinated.","Tags":"Coffee-themed, Technical"},{"Slogan":"No caffeine, no chaos. Just clean code.","Tags":"Coffee-themed, Calm, Tech"},{"Slogan":"Full flavor, no jitters. That’s Decaf-TS.","Tags":"Coffee-themed, Cheerful"},{"Slogan":"Chill fullstack. Powered by Decaf.","Tags":"Coffee-themed, Fun, Tech"},{"Slogan":"Decaf-TS: Brewed for calm code.","Tags":"Coffee-themed, Branding"},{"Slogan":"Smooth as your morning Decaf.","Tags":"Coffee-themed, Chill"},{"Slogan":"All the kick, none of the crash.","Tags":"Coffee-themed, Energetic"},{"Slogan":"Sip back and ship faster.","Tags":"Coffee-themed, Fun"},{"Slogan":"Keep calm and code Decaf.","Tags":"Coffee-themed, Playful"},{"Slogan":"Code without the caffeine shakes.","Tags":"Coffee-themed, Humorous"},{"Slogan":"Your fullstack, decaffeinated.","Tags":"Coffee-themed, Technical"},{"Slogan":"No caffeine, no chaos. Just clean code.","Tags":"Coffee-themed, Calm, Tech"},{"Slogan":"Full flavor, no jitters. That’s Decaf-TS.","Tags":"Coffee-themed, Cheerful"},{"Slogan":"Chill fullstack. Powered by Decaf.","Tags":"Coffee-themed, Fun, Tech"},{"Slogan":"Decaf-TS: Brewed for calm code.","Tags":"Coffee-themed, Branding"},{"Slogan":"Smooth as your morning Decaf.","Tags":"Coffee-themed, Chill"},{"Slogan":"All the kick, none of the crash.","Tags":"Coffee-themed, Energetic"},{"Slogan":"Sip back and ship faster.","Tags":"Coffee-themed, Fun"},{"Slogan":"Keep calm and code Decaf.","Tags":"Coffee-themed, Playful"},{"Slogan":"Code without the caffeine shakes.","Tags":"Coffee-themed, Humorous"},{"Slogan":"Your fullstack, decaffeinated.","Tags":"Coffee-themed, Technical"},{"Slogan":"No caffeine, no chaos. Just clean code.","Tags":"Coffee-themed, Calm, Tech"},{"Slogan":"Full flavor, no jitters. That’s Decaf-TS.","Tags":"Coffee-themed, Cheerful"},{"Slogan":"Chill fullstack. Powered by Decaf.","Tags":"Coffee-themed, Fun, Tech"},{"Slogan":"Decaf-TS: Brewed for calm code.","Tags":"Coffee-themed, Branding"},{"Slogan":"Smooth as your morning Decaf.","Tags":"Coffee-themed, Chill"},{"Slogan":"All the kick, none of the crash.","Tags":"Coffee-themed, Energetic"},{"Slogan":"Sip back and ship faster.","Tags":"Coffee-themed, Fun"},{"Slogan":"Keep calm and code Decaf.","Tags":"Coffee-themed, Playful"},{"Slogan":"Code without the caffeine shakes.","Tags":"Coffee-themed, Humorous"},{"Slogan":"Your fullstack, decaffeinated.","Tags":"Coffee-themed, Technical"},{"Slogan":"No caffeine, no chaos. Just clean code.","Tags":"Coffee-themed, Calm, Tech"},{"Slogan":"Full flavor, no jitters. That’s Decaf-TS.","Tags":"Coffee-themed, Cheerful"},{"Slogan":"Chill fullstack. Powered by Decaf.","Tags":"Coffee-themed, Fun, Tech"},{"Slogan":"Decaf-TS: Brewed for calm code.","Tags":"Coffee-themed, Branding"},{"Slogan":"Smooth as your morning Decaf.","Tags":"Coffee-themed, Chill"},{"Slogan":"All the kick, none of the crash.","Tags":"Coffee-themed, Energetic"},{"Slogan":"Sip back and ship faster.","Tags":"Coffee-themed, Fun"},{"Slogan":"Keep calm and code Decaf.","Tags":"Coffee-themed, Playful"},{"Slogan":"Code without the caffeine shakes.","Tags":"Coffee-themed, Humorous"},{"Slogan":"Your fullstack, decaffeinated.","Tags":"Coffee-themed, Technical"},{"Slogan":"No caffeine, no chaos. Just clean code.","Tags":"Coffee-themed, Calm, Tech"},{"Slogan":"Full flavor, no jitters. That’s Decaf-TS.","Tags":"Coffee-themed, Cheerful"},{"Slogan":"Chill fullstack. Powered by Decaf.","Tags":"Coffee-themed, Fun, Tech"},{"Slogan":"Decaf-TS: Brewed for calm code.","Tags":"Coffee-themed, Branding"},{"Slogan":"Smooth as your morning Decaf.","Tags":"Coffee-themed, Chill"},{"Slogan":"All the kick, none of the crash.","Tags":"Coffee-themed, Energetic"},{"Slogan":"Sip back and ship faster.","Tags":"Coffee-themed, Fun"},{"Slogan":"Keep calm and code Decaf.","Tags":"Coffee-themed, Playful"},{"Slogan":"Code without the caffeine shakes.","Tags":"Coffee-themed, Humorous"},{"Slogan":"Your fullstack, decaffeinated.","Tags":"Coffee-themed, Technical"},{"Slogan":"No caffeine, no chaos. Just clean code.","Tags":"Coffee-themed, Calm, Tech"},{"Slogan":"Full flavor, no jitters. That’s Decaf-TS.","Tags":"Coffee-themed, Cheerful"},{"Slogan":"Chill fullstack. Powered by Decaf.","Tags":"Coffee-themed, Fun, Tech"},{"Slogan":"Decaf-TS: Brewed for calm code.","Tags":"Coffee-themed, Branding"},{"Slogan":"Smooth as your morning Decaf.","Tags":"Coffee-themed, Chill"},{"Slogan":"All the kick, none of the crash.","Tags":"Coffee-themed, Energetic"},{"Slogan":"Sip back and ship faster.","Tags":"Coffee-themed, Fun"},{"Slogan":"Keep calm and code Decaf.","Tags":"Coffee-themed, Playful"},{"Slogan":"Code without the caffeine shakes.","Tags":"Coffee-themed, Humorous"},{"Slogan":"Your fullstack, decaffeinated.","Tags":"Coffee-themed, Technical"},{"Slogan":"Decaf-TS: Where smart contracts meet smart interfaces.","Tags":"Blockchain, Smart Contracts, Tech"},{"Slogan":"Ship dApps without the stress.","Tags":"Blockchain, Cheerful, Developer"},{"Slogan":"No CRUD, no problem — Decaf your data.","Tags":"Data, No-CRUD, Chill"},{"Slogan":"From DID to UI, without breaking a sweat.","Tags":"DID, SSI, UI, Calm"},{"Slogan":"Decaf-TS: Your frontend already understands your smart contract.","Tags":"Smart Contracts, DX, Magic"},{"Slogan":"Self-sovereign by design. Productive by default.","Tags":"SSI, Developer, Calm"},{"Slogan":"Build once. Deploy everywhere. Decentralized and delightful.","Tags":"Blockchain, Multi-platform, Happy"},{"Slogan":"Data that defines its own destiny.","Tags":"SSI, Data-driven, Empowerment"},{"Slogan":"Goodbye CRUD, hello intent-based interfaces.","Tags":"No-CRUD, UI, Technical"},{"Slogan":"The smoothest path from DID to done.","Tags":"DID, Workflow, Chill"},{"Slogan":"Because your dApp deserves more than boilerplate.","Tags":"Blockchain, DevX, Efficiency"},{"Slogan":"Own your data. Own your flow.","Tags":"SSI, Control, Ownership"},{"Slogan":"Write logic like it belongs with the data — because it does.","Tags":"Data Logic, Developer, Smart"},{"Slogan":"From smart contracts to smarter frontends.","Tags":"Smart Contracts, UI, DX"},{"Slogan":"No caffeine. No CRUD. Just the future.","Tags":"No-CRUD, Coffee-themed, Futuristic"},{"Slogan":"The future of web3 UX is Decaf.","Tags":"Blockchain, UX, Vision"},{"Slogan":"Code with confidence. Govern with clarity.","Tags":"Blockchain, Governance, Calm"},{"Slogan":"Interfaces that obey the data, not the other way around.","Tags":"UI, Data Logic, Self-aware"},{"Slogan":"Brew business logic right into your bytes.","Tags":"Data Logic, Coffee-themed, Fun"},{"Slogan":"DIDs done differently — and delightfully.","Tags":"DID, Self-Sovereign, Playful"},{"Slogan":"Decaf-TS-TS: Where blockchain contracts meet smart interfaces.","Tags":"Blockchain, Smart Contracts, Tech"},{"Slogan":"Ship dApps without the stress.","Tags":"Blockchain, Cheerful, Developer"},{"Slogan":"No boilerplate, no problem — Decaf-TS your data.","Tags":"Data, No-CRUD, Chill"},{"Slogan":"From DID to UI, without breaking a sweat.","Tags":"DID, SSI, UI, Calm"},{"Slogan":"Decaf-TS-TS: Your frontend already understands your blockchain contract.","Tags":"Smart Contracts, DX, Magic"},{"Slogan":"Self-sovereign by design. Productive by default.","Tags":"SSI, Developer, Calm"},{"Slogan":"Build once. Deploy everywhere. Decentralized and delightful.","Tags":"Blockchain, Multi-platform, Happy"},{"Slogan":"Data that defines its own destiny.","Tags":"SSI, Data-driven, Empowerment"},{"Slogan":"Goodbye boilerplate, hello intent-based interfaces.","Tags":"No-CRUD, UI, Technical"},{"Slogan":"The smoothest path from DID to done.","Tags":"DID, Workflow, Chill"},{"Slogan":"Because your dApp deserves more than boilerplate.","Tags":"Blockchain, DevX, Efficiency"},{"Slogan":"Own your data. Own your flow.","Tags":"SSI, Control, Ownership"},{"Slogan":"Write logic like it belongs with the data — because it does.","Tags":"Data Logic, Developer, Smart"},{"Slogan":"From blockchain contracts to smarter frontends.","Tags":"Smart Contracts, UI, DX"},{"Slogan":"No caffeine. No boilerplate. Just the future.","Tags":"No-CRUD, Coffee-themed, Futuristic"},{"Slogan":"The future of web3 UX is Decaf-TS.","Tags":"Blockchain, UX, Vision"},{"Slogan":"Code with confidence. Govern with clarity.","Tags":"Blockchain, Governance, Calm"},{"Slogan":"Interfaces that obey the data, not the other way around.","Tags":"UI, Data Logic, Self-aware"},{"Slogan":"Brew business logic right into your bytes.","Tags":"Data Logic, Coffee-themed, Fun"},{"Slogan":"DIDs done differently — and delightfully.","Tags":"DID, Self-Sovereign, Playful"},{"Slogan":"Decaf-TS-TS: Where blockchain contracts meet smart interfaces.","Tags":"Blockchain, Smart Contracts, Tech"},{"Slogan":"Ship dApps without the stress.","Tags":"Blockchain, Cheerful, Developer"},{"Slogan":"No boilerplate, no problem — Decaf-TS your data.","Tags":"Data, No-CRUD, Chill"},{"Slogan":"From DID to UI, without breaking a sweat.","Tags":"DID, SSI, UI, Calm"},{"Slogan":"Decaf-TS-TS: Your frontend already understands your blockchain contract.","Tags":"Smart Contracts, DX, Magic"},{"Slogan":"Self-sovereign by design. Productive by default.","Tags":"SSI, Developer, Calm"},{"Slogan":"Build once. Deploy everywhere. Decentralized and delightful.","Tags":"Blockchain, Multi-platform, Happy"},{"Slogan":"Data that defines its own destiny.","Tags":"SSI, Data-driven, Empowerment"},{"Slogan":"Goodbye boilerplate, hello intent-based interfaces.","Tags":"No-CRUD, UI, Technical"},{"Slogan":"The smoothest path from DID to done.","Tags":"DID, Workflow, Chill"},{"Slogan":"Because your dApp deserves more than boilerplate.","Tags":"Blockchain, DevX, Efficiency"},{"Slogan":"Own your data. Own your flow.","Tags":"SSI, Control, Ownership"},{"Slogan":"Write logic like it belongs with the data — because it does.","Tags":"Data Logic, Developer, Smart"},{"Slogan":"From blockchain contracts to smarter frontends.","Tags":"Smart Contracts, UI, DX"},{"Slogan":"No caffeine. No boilerplate. Just the future.","Tags":"No-CRUD, Coffee-themed, Futuristic"},{"Slogan":"The future of web3 UX is Decaf-TS.","Tags":"Blockchain, UX, Vision"},{"Slogan":"Code with confidence. Govern with clarity.","Tags":"Blockchain, Governance, Calm"},{"Slogan":"Interfaces that obey the data, not the other way around.","Tags":"UI, Data Logic, Self-aware"},{"Slogan":"Brew business logic right into your bytes.","Tags":"Data Logic, Coffee-themed, Fun"},{"Slogan":"DIDs done differently — and delightfully.","Tags":"DID, Self-Sovereign, Playful"},{"Slogan":"Decaf-TS-TS: Where blockchain contracts meet smart interfaces.","Tags":"Blockchain, Smart Contracts, Tech"},{"Slogan":"Ship dApps without the stress.","Tags":"Blockchain, Cheerful, Developer"},{"Slogan":"No boilerplate, no problem — Decaf-TS your data.","Tags":"Data, No-CRUD, Chill"},{"Slogan":"From DID to UI, without breaking a sweat.","Tags":"DID, SSI, UI, Calm"},{"Slogan":"Decaf-TS-TS: Your frontend already understands your blockchain contract.","Tags":"Smart Contracts, DX, Magic"},{"Slogan":"Self-sovereign by design. Productive by default.","Tags":"SSI, Developer, Calm"},{"Slogan":"Build once. Deploy everywhere. Decentralized and delightful.","Tags":"Blockchain, Multi-platform, Happy"},{"Slogan":"Data that defines its own destiny.","Tags":"SSI, Data-driven, Empowerment"},{"Slogan":"Goodbye boilerplate, hello intent-based interfaces.","Tags":"No-CRUD, UI, Technical"},{"Slogan":"The smoothest path from DID to done.","Tags":"DID, Workflow, Chill"},{"Slogan":"Because your dApp deserves more than boilerplate.","Tags":"Blockchain, DevX, Efficiency"},{"Slogan":"Own your data. Own your flow.","Tags":"SSI, Control, Ownership"},{"Slogan":"Write logic like it belongs with the data — because it does.","Tags":"Data Logic, Developer, Smart"},{"Slogan":"From blockchain contracts to smarter frontends.","Tags":"Smart Contracts, UI, DX"},{"Slogan":"No caffeine. No boilerplate. Just the future.","Tags":"No-CRUD, Coffee-themed, Futuristic"},{"Slogan":"The future of web3 UX is Decaf-TS.","Tags":"Blockchain, UX, Vision"},{"Slogan":"Code with confidence. Govern with clarity.","Tags":"Blockchain, Governance, Calm"},{"Slogan":"Interfaces that obey the data, not the other way around.","Tags":"UI, Data Logic, Self-aware"},{"Slogan":"Brew business logic right into your bytes.","Tags":"Data Logic, Coffee-themed, Fun"},{"Slogan":"DIDs done differently — and delightfully.","Tags":"DID, Self-Sovereign, Playful"},{"Slogan":"Decaf-TS-TS: Where blockchain contracts meet smart interfaces.","Tags":"Blockchain, Smart Contracts, Tech"},{"Slogan":"Ship dApps without the stress.","Tags":"Blockchain, Cheerful, Developer"},{"Slogan":"No boilerplate, no problem — Decaf-TS your data.","Tags":"Data, No-CRUD, Chill"},{"Slogan":"From DID to UI, without breaking a sweat.","Tags":"DID, SSI, UI, Calm"},{"Slogan":"Decaf-TS-TS: Your frontend already understands your blockchain contract.","Tags":"Smart Contracts, DX, Magic"},{"Slogan":"Self-sovereign by design. Productive by default.","Tags":"SSI, Developer, Calm"},{"Slogan":"Build once. Deploy everywhere. Decentralized and delightful.","Tags":"Blockchain, Multi-platform, Happy"},{"Slogan":"Data that defines its own destiny.","Tags":"SSI, Data-driven, Empowerment"},{"Slogan":"Goodbye boilerplate, hello intent-based interfaces.","Tags":"No-CRUD, UI, Technical"},{"Slogan":"The smoothest path from DID to done.","Tags":"DID, Workflow, Chill"},{"Slogan":"Because your dApp deserves more than boilerplate.","Tags":"Blockchain, DevX, Efficiency"},{"Slogan":"Own your data. Own your flow.","Tags":"SSI, Control, Ownership"},{"Slogan":"Write logic like it belongs with the data — because it does.","Tags":"Data Logic, Developer, Smart"},{"Slogan":"From blockchain contracts to smarter frontends.","Tags":"Smart Contracts, UI, DX"},{"Slogan":"No caffeine. No boilerplate. Just the future.","Tags":"No-CRUD, Coffee-themed, Futuristic"},{"Slogan":"The future of web3 UX is Decaf-TS.","Tags":"Blockchain, UX, Vision"},{"Slogan":"Code with confidence. Govern with clarity.","Tags":"Blockchain, Governance, Calm"},{"Slogan":"Interfaces that obey the data, not the other way around.","Tags":"UI, Data Logic, Self-aware"},{"Slogan":"Brew business logic right into your bytes.","Tags":"Data Logic, Coffee-themed, Fun"},{"Slogan":"DIDs done differently — and delightfully.","Tags":"DID, Self-Sovereign, Playful"}]')},686:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.lockify=function(e){let t=Promise.resolve();return(...o)=>{const a=t.then((()=>e(...o)));return t=a.catch((()=>{})),a}},t.chainAbortController=i,t.spawnCommand=l,t.runCommand=function e(t,o={},a=n.StandardOutputWriter,...i){const c=r.Logging.for(e),g=new AbortController,f={abort:g,command:t,logs:[],errs:[]},u=new Promise(((e,n)=>{let r;try{r=new a(t,{resolve:e,reject:n},...i),f.cmd=l(r,t,o,g,c)}catch(e){return n(new Error(`Error running command ${t}: ${e}`))}f.cmd.stdout.setEncoding("utf8"),f.cmd.stdout.on("data",(e=>{e=e.toString(),f.logs.push(e),r.data(e)})),f.cmd.stderr.on("data",(e=>{e=e.toString(),f.errs.push(e),r.error(e)})),f.cmd.once("error",(e=>{r.exit(e.message,f.errs)})),f.cmd.once("exit",((e=0)=>{g.signal.aborted&&null===e&&(e=s.AbortCode),r.exit(e,0===e?f.logs:f.errs)}))}));return Object.assign(f,{promise:u,pipe:async e=>{const o=c.for("pipe");try{o.verbose(`Executing pipe function ${t}...`);const a=await u;return o.verbose(`Piping output to ${e.name}: ${a}`),e(a)}catch(e){throw o.error(`Error piping command output: ${e}`),e}}}),f};const a=o(317),n=o(499),r=o(834),s=o(154);function i(e,...t){let o,a;if(e instanceof AbortSignal?(a=new AbortController,o=[e,...t]):(a=e,o=t),a.signal.aborted)return a;const n=()=>a.abort();for(const e of o){if(e.aborted){a.abort();break}e.addEventListener("abort",n,{once:!0,signal:a.signal})}return a}function l(e,t,o,n,r){function s(t,n){const[s,i]=e.parseCommand(t);r.info(`Running command: ${s}`),r.debug(`with args: ${i.join(" ")}`);const l=(0,a.spawn)(s,i,{...o,cwd:o.cwd||process.cwd(),env:Object.assign({},process.env,o.env,{PATH:process.env.PATH}),shell:o.shell||!1,signal:n.signal});return r.verbose(`pid : ${l.pid}`),l}const l=t.match(/[<>$#]/g);if(l)throw new Error(`Invalid command: ${t}. contains invalid characters: ${l}`);if(t.includes(" | ")){const e=t.split(" | "),o=[],a=new Array(e.length);a[0]=n;for(let t=0;t<e.length;t++)0!==t&&(a[t]=i(a[t-1].signal)),o.push(s(e[t],a[t])),0!==t&&o[t-1].stdout.pipe(o[t].stdin);return o[e.length-1]}return s(t,n)}},692:e=>{e.exports=require("https")},698:e=>{e.exports=require("styled-string-builder")},714:function(e,t,o){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.UserInput=void 0;const n=a(o(443)),r=o(23),s=o(834);class i{static{this.logger=s.Logging.for(i)}constructor(e){this.type="text",this.name=e}setType(e){return i.logger.verbose(`Setting type to: ${e}`),this.type=e,this}setMessage(e){return i.logger.verbose(`Setting message to: ${e}`),this.message=e,this}setInitial(e){return i.logger.verbose(`Setting initial value to: ${e}`),this.initial=e,this}setStyle(e){return i.logger.verbose(`Setting style to: ${e}`),this.style=e,this}setFormat(e){return i.logger.verbose("Setting format function"),this.format=e,this}setValidate(e){return i.logger.verbose("Setting validate function"),this.validate=e,this}setOnState(e){return i.logger.verbose("Setting onState callback"),this.onState=e,this}setOnRender(e){return i.logger.verbose("Setting onRender callback"),this.onRender=e,this}setMin(e){return i.logger.verbose(`Setting min value to: ${e}`),this.min=e,this}setMax(e){return i.logger.verbose(`Setting max value to: ${e}`),this.max=e,this}setFloat(e){return i.logger.verbose(`Setting float to: ${e}`),this.float=e,this}setRound(e){return i.logger.verbose(`Setting round to: ${e}`),this.round=e,this}setInstructions(e){return i.logger.verbose(`Setting instructions to: ${e}`),this.instructions=e,this}setIncrement(e){return i.logger.verbose(`Setting increment to: ${e}`),this.increment=e,this}setSeparator(e){return i.logger.verbose(`Setting separator to: ${e}`),this.separator=e,this}setActive(e){return i.logger.verbose(`Setting active style to: ${e}`),this.active=e,this}setInactive(e){return i.logger.verbose(`Setting inactive style to: ${e}`),this.inactive=e,this}setChoices(e){return i.logger.verbose(`Setting choices: ${JSON.stringify(e)}`),this.choices=e,this}setHint(e){return i.logger.verbose(`Setting hint to: ${e}`),this.hint=e,this}setWarn(e){return i.logger.verbose(`Setting warn to: ${e}`),this.warn=e,this}setSuggest(e){return i.logger.verbose("Setting suggest function"),this.suggest=e,this}setLimit(e){return i.logger.verbose(`Setting limit to: ${e}`),this.limit=e,this}setMask(e){return i.logger.verbose(`Setting mask to: ${e}`),this.mask=e,this}setStdout(e){return i.logger.verbose("Setting stdout stream"),this.stdout=e,this}setStdin(e){return this.stdin=e,this}async ask(){return(await i.ask(this))[this.name]}static async ask(e){const t=i.logger.for(this.ask);let o;Array.isArray(e)||(e=[e]);try{t.verbose(`Asking questions: ${e.map((e=>e.name)).join(", ")}`),o=await(0,n.default)(e),t.verbose(`Received answers: ${JSON.stringify(o,null,2)}`)}catch(e){throw new Error(`Error while getting input: ${e}`)}return o}static async askNumber(e,t,o,a,n){i.logger.for(this.askNumber).verbose(`Asking number input: undefined, question: ${t}, min: ${o}, max: ${a}, initial: ${n}`);const r=new i(e).setMessage(t).setType("number");return"number"==typeof o&&r.setMin(o),"number"==typeof a&&r.setMax(a),"number"==typeof n&&r.setInitial(n),(await this.ask(r))[e]}static async askText(e,t,o=void 0,a){i.logger.for(this.askText).verbose(`Asking text input: undefined, question: ${t}, mask: ${o}, initial: ${a}`);const n=new i(e).setMessage(t);return o&&n.setMask(o),"string"==typeof a&&n.setInitial(a),(await this.ask(n))[e]}static async askConfirmation(e,t,o){i.logger.for(this.askConfirmation).verbose(`Asking confirmation input: undefined, question: ${t}, initial: ${o}`);const a=new i(e).setMessage(t).setType("confirm");return void 0!==o&&a.setInitial(o),(await this.ask(a))[e]}static async insist(e,t,o,a=1){const n=i.logger.for(this.insist);let r;n.verbose(`Insisting on input: ${e.name}, test: ${t.toString()}, defaultConfirmation: ${o}, limit: ${a}`);let s,l=0;try{do{r=(await i.ask(e))[e.name],t(r)?(s=await i.askConfirmation(`${e.name}-confirm`,`Is the ${e.type} correct?`,o),s||(r=void 0)):r=void 0}while(void 0===r&&a>1&&l++<a)}catch(e){throw n.error(`Error while insisting: ${e}`),e}return void 0===r&&n.info("no selection..."),r}static async insistForText(e,t,o,a=void 0,n,r=!1,s=-1){i.logger.for(this.insistForText).verbose(`Insisting for text input: undefined, question: ${t}, test: ${o.toString()}, mask: ${a}, initial: ${n}, defaultConfirmation: ${r}, limit: ${s}`);const l=new i(e).setMessage(t);return a&&l.setMask(a),"string"==typeof n&&l.setInitial(n),await this.insist(l,o,r,s)}static async insistForNumber(e,t,o,a,n,r,s=!1,l=-1){i.logger.for(this.insistForNumber).verbose(`Insisting for number input: undefined, question: ${t}, test: ${o.toString()}, min: ${a}, max: ${n}, initial: ${r}, defaultConfirmation: ${s}, limit: ${l}`);const c=new i(e).setMessage(t).setType("number");return"number"==typeof a&&c.setMin(a),"number"==typeof n&&c.setMax(n),"number"==typeof r&&c.setInitial(r),await this.insist(c,o,s,l)}static parseArgs(e){const t=i.logger.for(this.parseArgs),o={args:process.argv.slice(2),options:e};t.debug(`Parsing arguments: ${JSON.stringify(o,null,2)}`);try{return(0,r.parseArgs)(o)}catch(a){throw t.debug(`Error while parsing arguments:\n${JSON.stringify(o,null,2)}\n | options\n${JSON.stringify(e,null,2)}\n | ${a}`),new Error(`Error while parsing arguments: ${a}`)}}}t.UserInput=i},741:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ObjectAccumulator=void 0;class o{constructor(){Object.defineProperty(this,"__size",{value:0,writable:!0,configurable:!1,enumerable:!1})}expand(e){Object.entries(e).forEach((([e,t])=>{Object.defineProperty(this,e,{get:()=>t,set:e=>{t=e},configurable:!0,enumerable:!0})}))}accumulate(e){return this.expand(e),this.__size=this.__size+Object.keys(e).length,this}get(e){return this[e]}has(e){return!!this[e]}remove(e){return e in this?(delete this[e],this.__size--,this):this}keys(){return Object.keys(this)}values(){return Object.values(this)}size(){return this.__size}clear(){return new o}forEach(e){Object.entries(this).forEach((([t,o],a)=>e(o,t,a)))}map(e){return Object.entries(this).map((([t,o],a)=>e(o,t,a)))}}t.ObjectAccumulator=o},747:function(e,t,o){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.HttpClient=void 0;const n=a(o(692)),r=o(834);class s{static{this.log=r.Logging.for(s)}static async downloadFile(e){return new Promise(((t,o)=>{!function e(a){a=encodeURI(a),n.default.get(a,(n=>{if(301===n.statusCode||307===n.statusCode)return e(n.headers.location);if(200!==n.statusCode)return s.log.error(`Failed to fetch ${a} (status: ${n.statusCode})`),o(new Error(`Failed to fetch ${a}`));let r="";n.on("data",(e=>{r+=e})),n.on("error",(e=>{o(e)})),n.on("end",(()=>{t(r)}))}))}(e)}))}}t.HttpClient=s},834:(e,t,o)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Logging=t.MiniLogger=void 0;const a=o(154),n=o(698);class r{constructor(e,t,o){this.context=e,this.conf=t,this.id=o}config(e){return this.conf&&e in this.conf?this.conf[e]:s.getConfig()[e]}for(e,t){return e=e?"string"==typeof e?e:e.name:void 0,s.for([this.context,e].join("."),this.id,t)}createLog(e,t,o){const a=[],n=this.config("style");if(this.config("timestamp")){const t=(new Date).toISOString(),o=n?s.theme(t,"timestamp",e):t;a.push(o)}if(this.config("logLevel")){const t=n?s.theme(e,"logLevel",e):e;a.push(t)}if(this.config("context")){const t=n?s.theme(this.context,"class",e):this.context;a.push(t)}const r=n?s.theme("string"==typeof t?t:t.message,"message",e):"string"==typeof t?t:t.message;return a.push(r),(o||t instanceof Error)&&(o=n?s.theme(o||t.stack,"stack",e):o,a.push(`\nStack trace:\n${o}`)),a.join(this.config("separator"))}log(e,t,o){if(a.NumericLogLevels[this.config("level")]<a.NumericLogLevels[e])return;let n;switch(e){case a.LogLevel.info:n=console.log;break;case a.LogLevel.verbose:case a.LogLevel.debug:n=console.debug;break;case a.LogLevel.error:n=console.error;break;default:throw new Error("Invalid log level")}n(this.createLog(e,t,o))}silly(e,t=0){this.config("verbose")>=t&&this.log(a.LogLevel.verbose,e)}verbose(e,t=0){this.config("verbose")>=t&&this.log(a.LogLevel.verbose,e)}info(e){this.log(a.LogLevel.info,e)}debug(e){this.log(a.LogLevel.debug,e)}error(e){this.log(a.LogLevel.error,e)}setConfig(e){this.conf={...this.conf||{},...e}}}t.MiniLogger=r;class s{static{this._factory=(e,t,o)=>new r(e,t,o)}static{this._config=a.DefaultLoggingConfig}constructor(){}static setConfig(e){Object.assign(this._config,e)}static getConfig(){return Object.assign({},this._config)}static get(){return this.global=this.global?this.global:this._factory("Logging"),this.global}static verbose(e,t=0){return this.get().verbose(e,t)}static info(e){return this.get().info(e)}static debug(e){return this.get().debug(e)}static silly(e){return this.get().silly(e)}static error(e){return this.get().error(e)}static for(e,t,o){return e="string"==typeof e?e:e.name,o="object"==typeof(t="string"==typeof t?t:void 0)?t:o,this._factory(e,o,t)}static because(e,t){return this._factory(e,this._config,t)}static theme(e,t,o,r=a.DefaultTheme){if(!this._config.style)return e;const i=s.get().for(this.theme),l=r[t];if(!l||!Object.keys(l).length)return e;let c=l;const g=Object.assign({},a.LogLevel);return Object.keys(l)[0]in g&&(c=l[o]||{}),Object.keys(c).reduce(((e,t)=>{const o=c[t];return o?function(e,t,o){try{const a=e;let r=(0,n.style)(a);function s(e,s=!1){let l=s?r.background:r.foreground;if(!Array.isArray(e))return l.call(r,o);switch(e.length){case 1:return l=s?r.bgColor256:r.color256,l(e[0]);case 3:return l=s?r.bgRgb:r.rgb,r.rgb(e[0],e[1],e[2]);default:return i.error(`Not a valid color option: ${t}`),(0,n.style)(a)}}function l(e){r="number"==typeof e?r.style(e):r[e]}switch(t){case"bg":case"fg":return s(o).text;case"style":return Array.isArray(o)?o.forEach(l):l(o),r.text;default:return i.error(`Not a valid theme option: ${t}`),a}}catch(c){return i.error(`Error applying style: ${t} with value ${o}`),e}}(e,t,o):e}),e)}}t.Logging=s},837:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DefaultCommandValues=t.DefaultCommandOptions=void 0,t.DefaultCommandOptions={verbose:{type:"boolean",short:"V",default:void 0},version:{type:"boolean",short:"v",default:void 0},help:{type:"boolean",short:"h",default:!1},logLevel:{type:"string",default:"info"},logStyle:{type:"boolean",default:!0},timestamp:{type:"boolean",default:!0},banner:{type:"boolean",default:!0}},t.DefaultCommandValues=Object.keys(t.DefaultCommandOptions).reduce(((e,o)=>(e[o]=t.DefaultCommandOptions[o].default,e)),{})},866:function(e,t,o){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.printBanner=function(e){const t=i(),o="#                 ░▒▓███████▓▒░  ░▒▓████████▓▒░  ░▒▓██████▓▒░   ░▒▓██████▓▒░  ░▒▓████████▓▒░       ░▒▓████████▓▒░  ░▒▓███████▓▒░ \n#      ( (        ░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▒░        ░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▒░                 ░▒▓█▓▒░     ░▒▓█▓▒░        \n#       ) )       ░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▒░        ░▒▓█▓▒░        ░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▒░                 ░▒▓█▓▒░     ░▒▓█▓▒░        \n#    [=======]    ░▒▓█▓▒░░▒▓█▓▒░ ░▒▓██████▓▒░   ░▒▓█▓▒░        ░▒▓████████▓▒░ ░▒▓██████▓▒░            ░▒▓█▓▒░      ░▒▓██████▓▒░  \n#     `-----´     ░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▒░        ░▒▓█▓▒░        ░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▒░                 ░▒▓█▓▒░            ░▒▓█▓▒░ \n#                 ░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▒░        ░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▒░                 ░▒▓█▓▒░            ░▒▓█▓▒░ \n#                 ░▒▓███████▓▒░  ░▒▓████████▓▒░  ░▒▓██████▓▒░  ░▒▓█▓▒░░▒▓█▓▒░ ░▒▓█▓▒░                 ░▒▓█▓▒░     ░▒▓███████▓▒░  \n#".split("\n"),a=o.reduce(((e,t)=>Math.max(e,t.length)),0);o.push(`#  ${t.padStart(a-3)}`),o.forEach(((t,o)=>{(e?e.info.bind(e):console.log.bind(console))((0,r.style)(t||"").raw(s[o]).text)}))},t.getSlogan=i;const n=a(o(680)),r=o(698),s=["[38;5;215m","[38;5;209m","[38;5;205m","[38;5;210m","[38;5;217m","[38;5;216m","[38;5;224m","[38;5;230m","[38;5;230m"];function i(e){try{return e=void 0===e?Math.floor(Math.random()*n.default.length):e,n.default[e].Slogan}catch(e){throw new Error(`Failed to retrieve slogans: ${e}`)}}},874:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0})},885:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.isBrowser=function(){return Object.getPrototypeOf(Object.getPrototypeOf(globalThis))!==Object.prototype}},896:e=>{e.exports=require("fs")},928:e=>{e.exports=require("path")},935:function(e,t,o){var a=this&&this.__createBinding||(Object.create?function(e,t,o,a){void 0===a&&(a=o);var n=Object.getOwnPropertyDescriptor(t,o);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[o]}}),Object.defineProperty(e,a,n)}:function(e,t,o,a){void 0===a&&(a=o),e[a]=t[o]}),n=this&&this.__exportStar||function(e,t){for(var o in e)"default"===o||Object.prototype.hasOwnProperty.call(t,o)||a(t,e,o)};Object.defineProperty(t,"__esModule",{value:!0}),n(o(154),t),n(o(30),t),n(o(340),t),n(o(747),t),n(o(547),t),n(o(874),t),n(o(686),t)},946:function(e,t,o){var a=this&&this.__createBinding||(Object.create?function(e,t,o,a){void 0===a&&(a=o);var n=Object.getOwnPropertyDescriptor(t,o);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[o]}}),Object.defineProperty(e,a,n)}:function(e,t,o,a){void 0===a&&(a=o),e[a]=t[o]}),n=this&&this.__exportStar||function(e,t){for(var o in e)"default"===o||Object.prototype.hasOwnProperty.call(t,o)||a(t,e,o)};Object.defineProperty(t,"__esModule",{value:!0}),n(o(714),t),n(o(483),t)}},t={};function o(a){var n=t[a];if(void 0!==n)return n.exports;var r=t[a]={exports:{}};return e[a].call(r.exports,r,r.exports,o),r.exports}var a={};return(()=>{var e=a;Object.defineProperty(e,"__esModule",{value:!0});const t=o(487);(new t.ReleaseScript).execute().then((()=>t.ReleaseScript.log.info("Release pushed successfully"))).catch((e=>{t.ReleaseScript.log.error(`Error preparing release: ${e}`),process.exit(1)}))})(),a})()));